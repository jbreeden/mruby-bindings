#!/usr/bin/env ruby

require 'json'
require 'fileutils'

$declaration_files = ['declarations.json']
$output_dirname = 'mruby-bindings.out/ingested-declarations'

FileUtils.rm_rf $output_dirname if Dir.exists?($output_dirname)
FileUtils.mkdir_p $output_dirname

class OutFiles
  def initialize()
    names = %w{EnumConstantDecl EnumDecl FieldDecl FunctionDecl MacroDefinition ParmDecl StructDecl TypedefDecl}
    @files = {}
    names.each { |n|
      @files[n] = File.new(normalized_path(n), 'w+')
    }
  end

  def process_line(line)
    decl = JSON.parse(line).fetch("kind")
    @files[decl].puts(line)
  end

  def close
    @files ||= {}
    @files.each do |k, f|
      f.close
    end
  end

  private
  def normalized_path(name)
    $output_dirname + "/" + name.gsub(/[a-z][A-Z]/) {|s| "#{s[0]}-#{s[1].downcase}" }.downcase + ".json"
  end
end

out = OutFiles.new
$declaration_files.each do |declaration_filename|
  open(declaration_filename, 'r') do |declaration_file|
    declaration_file.each_line {|line| out.process_line(line) }
  end
end

out.close
