#!/usr/bin/env ruby

require 'erb'
require 'fileutils'
require 'mruby/bindings'

output_dir = MRuby::Bindings::Paths::RENDER_DIR
FileUtils.mkdir_p(output_dir) unless Dir.exists?(output_dir)
rendered_classes_file = File.open("#{output_dir}/classes.yaml", 'w')

class_erb = ERB.new(
  File.read( MRuby::Bindings::Paths::TEMPLATE_DIR + '/class.erb'),
  nil,
  '-')

module_name = MRuby::Bindings::Hooks.module_name
discovery = MRuby::Bindings::DiscoveryIndex.new
typedef_resolver = MRuby::Bindings::TypedefResolver.new

discovery.types.each.sort_by { |type| type['ruby_name'] }.each do |type|
  preferred_type_name = typedef_resolver.preferred_type_name(type['name'])
  class_id = MRuby::Bindings::Names.type_name_to_id(preferred_type_name)
  rendered_classes_file.puts YAML.dump(MRuby::Bindings::RenderedText.new(type['ruby_name'], class_erb.result(binding)))
end
